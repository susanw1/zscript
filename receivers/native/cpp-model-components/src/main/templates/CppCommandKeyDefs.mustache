/*
* Zscript Library - Command System for Microcontrollers)
* Copyright (c) 2022 Zscript team (Susan Witts, Alicia Witts)
*
* SPDX-License-Identifier:Â MIT
*/

#ifndef SRC_MAIN_C___ZSCRIPT_KEYS_{{#upperUnderscore}}{{moduleName}}{{/upperUnderscore}}_HPP_
#define SRC_MAIN_C___ZSCRIPT_KEYS_{{#upperUnderscore}}{{moduleName}}{{/upperUnderscore}}_HPP_

namespace Zscript {

/**
 * {{name}} Module: {{description}}.
 *
 * @version {{version}}
 *
 * Generated(value = "CppCommandKeyDefs.mustache",
 *  date = "{{timeNow}}",
 *  comments = "Module command/response key constants list, using {{additional.context-source}}")
 */
namespace {{#lowerUnderscore}}{{moduleName}}{{/lowerUnderscore}}_module {

{{#commands}}
/**
 * {{description}}
 */
namespace cmd_{{#lowerUnderscore}}{{commandName}}{{/lowerUnderscore}} {
    {{#requestFields}}
        {{#typeDefinition}}
            {{#enumType}}
    /** Enum ({{#required}}Required{{/required}}{{^required}}Optional{{/required}}): {{description}} */
    constexpr uint8_t Req_{{#upperCamel}}{{name}}{{/upperCamel}}__{{key}} = '{{key}}';
            {{/enumType}}
            {{#numberType}}
    /** Number ({{#required}}Required{{/required}}{{^required}}Optional{{/required}}): {{description}} */
    constexpr uint8_t Req_{{#upperCamel}}{{name}}{{/upperCamel}}__{{key}} = '{{key}}';
            {{/numberType}}
            {{#bitsetType}}
    /** Bitset ({{#required}}Required{{/required}}{{^required}}Optional{{/required}}): {{description}} */
    constexpr uint8_t Req_{{#upperCamel}}{{name}}{{/upperCamel}}__{{key}} = '{{key}}';
            {{/bitsetType}}
            {{#flagType}}
    /** Flag ({{#required}}Required{{/required}}{{^required}}Optional{{/required}}): {{description}} */
    constexpr uint8_t Req_{{#upperCamel}}{{name}}{{/upperCamel}}__{{key}} = '{{key}}';
            {{/flagType}}
            {{#textType}}
    /** Text ({{#required}}Required{{/required}}{{^required}}Optional{{/required}}): {{description}} */
    constexpr uint8_t Req_{{#upperCamel}}{{name}}{{/upperCamel}}__Txt = '{{key}}';
            {{/textType}}
            {{#bytesType}}
    /** Bytes ({{#required}}Required{{/required}}{{^required}}Optional{{/required}}): {{description}} */
    constexpr uint8_t Req_{{#upperCamel}}{{name}}{{/upperCamel}}__Bytes = '{{key}}';
            {{/bytesType}}
        {{/typeDefinition}}
    {{/requestFields}}

    {{#responseFields}}
            {{#typeDefinition}}
            {{#enumType}}
    /** Enum ({{#required}}Required{{/required}}{{^required}}Optional{{/required}}): {{description}} */
    constexpr uint8_t Resp_{{#upperCamel}}{{name}}{{/upperCamel}}__{{key}} = '{{key}}';
            {{/enumType}}
            {{#numberType}}
    /** Number ({{#required}}Required{{/required}}{{^required}}Optional{{/required}}): {{description}} */
    constexpr uint8_t Resp_{{#upperCamel}}{{name}}{{/upperCamel}}__{{key}} = '{{key}}';
            {{/numberType}}
            {{#bitsetType}}
    /** Bitset ({{#required}}Required{{/required}}{{^required}}Optional{{/required}}): {{description}} */
    constexpr uint8_t Resp_{{#upperCamel}}{{name}}{{/upperCamel}}__{{key}} = '{{key}}';
            {{/bitsetType}}
            {{#flagType}}
    /** Flag ({{#required}}Required{{/required}}{{^required}}Optional{{/required}}): {{description}} */
    constexpr uint8_t Resp_{{#upperCamel}}{{name}}{{/upperCamel}}__{{key}} = '{{key}}';
            {{/flagType}}
            {{#textType}}
    /** Text ({{#required}}Required{{/required}}{{^required}}Optional{{/required}}): {{description}} */
    constexpr uint8_t Resp_{{#upperCamel}}{{name}}{{/upperCamel}}__Txt = '{{key}}';
            {{/textType}}
            {{#bytesType}}
    /** Bytes ({{#required}}Required{{/required}}{{^required}}Optional{{/required}}): {{description}} */
    constexpr uint8_t Resp_{{#upperCamel}}{{name}}{{/upperCamel}}__Bytes = '{{key}}';
            {{/bytesType}}
        {{/typeDefinition}}
    {{/responseFields}}
}   // cmd_{{#lowerUnderscore}}{{commandName}}{{/lowerUnderscore}}

{{/commands}}

} // {{#lowerUnderscore}}{{moduleName}}{{/lowerUnderscore}}_module
} // Zscript
#endif /* SRC_MAIN_C___ZSCRIPT_KEYS_{{#upperUnderscore}}{{moduleName}}{{/upperUnderscore}}_HPP_ */
