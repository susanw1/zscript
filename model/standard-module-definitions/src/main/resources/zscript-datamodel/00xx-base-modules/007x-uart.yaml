name: Uart
id: 7
version: 0.0.1
description: UART Connectivity for Serial communication
longDescription: >
    This module supports configuring and using multiple device UARTs, either as plain p2p data send/receive connection,
    or as a Zscript channel (for receiving commands from upstream), or as a downstream address connection. 
    
    It supports two mechanisms for baud-rate configuration: a menu set of options (0-n), or actual frequency (using the big
    field). 

commands:
-   name: capabilities
    command: 0x0
    description: Serial capabilities
    operation: get
    requestFields:
    -   key: F
        name: frequencySelection
        description: 'which frequency option should be investigated (default: maximum)'
        typeDefinition:
            '@type': number
        required: no
    responseFields:
    -   key: C
        name: commandsSet
        description: which commands are enabled in the UART module
        typeDefinition:
            '@type': commands
        required: yes
    -   key: N
        name: notificationsSupported
        description: whether notifications are supported for received data
        typeDefinition:
            '@type': flag
        required: no
    -   key: A
        name: addressingSupported
        description: whether addressing via the serial interface is available
        typeDefinition:
            '@type': flag
        required: no
    -   key: I
        name: interfaceCount
        description: how many interfaces are available
        typeDefinition:
            '@type': number
        required: yes
    -   key: F
        name: frequenciesSupported
        description: how many frequencies are supported as a 'menu' of frequencies - if not present, no preset frequencies are supported
        typeDefinition:
            '@type': number
        required: no
    -   key: B
        name: bitsetCapabilities
        description: a set of more specific capabilities of the module
        typeDefinition:
            '@type': bitset
            bits:
            -   name: parity
                description: whether parity bits are supported
            -   name: doubleStop
                description: whether the device supports choosing single or double stop bits
            -   name: autoBaud
                description: whether the device supports automatic baudrate detection
            -   name: arbitraryFrequency
                description: whether the device supports selecting baudrate as a freely varying number
        required: yes
    -   key: R
        name: rxBufferSize
        description: how many bytes of buffer have been assigned for received data
        typeDefinition:
            '@type': number
        required: yes
    -   key: T
        name: txBufferSize
        description: how many bytes of buffer have been assigned for transmitted data
        typeDefinition:
            '@type': number
        required: yes
    -   key: X
        name: baudRate
        description: the baud rate menu option requested in Hz (or maximum rate supported if not given)
        typeDefinition:
            '@type': bytes
        required: yes
    status: [ ]


-   name: setup
    command: 0x1
    description: Serial setup
    operation: put
    requestFields:
    -   key: I
        name: interface
        description: 'which interface should be configured (default: all)'
        typeDefinition:
            '@type': number
        required: no
    -   key: F
        name: frequency
        description: which frequency option should be selected from the 'menu'
        typeDefinition:
            '@type': number
        required: no
    -   key: B
        name: options
        description: a set of more specific operational choices about the device's operation
        typeDefinition: &setup_options
            '@type': bitset
            bits:
            -   name: parityOn
                description: enables sending parity bits
            -   name: parityOdd
                description: if parityOn, then enable odd parity
            -   name: doubleStop
                description: selects double stop bits rather than single
            -   name: autoBaud
                description: enables automatic baud rate detection
        required: no
    -   key: A
        name: addressing
        description: enables addressing
        typeDefinition:
            '@type': flag
        required: no
    -   key: N
        name: notifications
        description: enables notifications
        typeDefinition:
            '@type': flag
        required: no
    -   key: X
        name: baudRate
        description: the baud rate requested, in Hz
        typeDefinition:
            '@type': bytes
        required: no
    responseFields:
    -   key: L
        name: dataLength
        description: the amount of data in the buffer of the given interface
        typeDefinition:
            '@type': number
        required: yes
    -   key: X
        name: baudRate
        description: the baud rate the device is running at, in Hz
        typeDefinition:
            '@type': bytes
        required: yes
    status: [ ]


-   name: send
    command: 0x2
    description: Serial send
    operation: post
    requestFields:
    -   key: I
        name: interface
        description: which interface should be used
        typeDefinition:
            '@type': number
        required: yes
    -   key: D
        name: data
        description: the data to be sent
        typeDefinition:
            '@type': bytes
        required: yes
    responseFields: [ ]
    status: [ ]


-   name: receive
    command: 0x3
    description: Serial receive
    operation: read
    requestFields:
    -   key: I
        name: interface
        description: which interface should be used
        typeDefinition:
            '@type': number
        required: yes
    -   key: L
        name: length
        description: how much data is to be read from the buffer
        typeDefinition:
            '@type': number
        required: yes
    responseFields:
    -   key: M
        name: serialMarker
        description: the type of terminator ending the read
        typeDefinition: &receive_markers
            '@type': enum
            values:
            - Nothing
            - Break
            - ParityError
            - NoiseError
            - BufferOverflow
        required: yes
    -   key: D
        name: data
        description: the data received up to the first serial marker
        typeDefinition:
            '@type': bytes
        required: yes
    status: [ ]

-   name: skip
    command: 0x4
    description: Serial skip
    operation: read
    requestFields:
    -   key: I
        name: interface
        description: which interface should be used
        typeDefinition:
            '@type': number
        required: yes
    -   key: L
        name: length
        description: how much data is to be skipped from the buffer
        typeDefinition:
            '@type': number
        required: yes
    responseFields:
    -   key: M
        name: serialMarker
        description: the type of terminator ending the skip
        typeDefinition: *receive_markers
        required: yes
    -   key: L
        name: length
        description: how much data was skipped
        typeDefinition:
            '@type': number
        required: yes
    status: [ ]

-   name: channelInfo
    command: 0xc
    description: gets detailed information about a uart channel
    operation: get
    requestFields:
    -   key: C
        name: channel
        description: 'which channel to fetch info about'
        typeDefinition:
            '@type': number
        required: yes
    -   key: F
        name: frequencySelection
        description: 'which frequency option should be investigated (default: maximum)'
        typeDefinition:
            '@type': number
        required: no
    responseFields:
    -   key: N
        name: channelCount
        description: the number of Uart channels supported by the device
        typeDefinition:
            '@type': number
        required: yes
    -   key: I
        name: interface
        description: which interface the channel operates on
        typeDefinition:
            '@type': number
        required: yes
    -   key: F
        name: frequenciesSupported
        description: how many frequencies are supported as a 'menu' of frequencies - if not present, no preset frequencies are supported
        typeDefinition:
            '@type': number
        required: no
    -   key: B
        name: bitsetCapabilities
        description: a set of more specific capabilities of the module
        typeDefinition:
            '@type': bitset
            bits:
            -   name: parityOn
                description: enables sending parity bits
            -   name: parityOdd
                description: if parityOn, then odd parity enabled
            -   name: doubleStop
                description: whether the device supports choosing single or double stop bits
            -   name: autoBaud
                description: whether the device supports automatic baudrate detection
            -   name: arbitraryFrequency
                description: whether the device supports selecting baudrate as a freely varying number
        required: yes
    -   key: X
        name: baudRate
        description: the baud rate option requested in Hz (or maximum rate supported if not given)
        typeDefinition:
            '@type': bytes
        required: yes
    status: [ ]

-   name: channelSetup
    command: 0xd
    description: sets detailed control variables on an I2C channel
    operation: put
    requestFields:
    -   key: C
        name: channel
        description: which channel to setup
        typeDefinition:
            '@type': number
        required: yes
    -   key: F
        name: frequencySelection
        description: which frequency option should be selected from the 'menu'
        typeDefinition:
            '@type': number
        required: no
    -   key: B
        name: options
        description: a set of more specific operational choices about the device's operation
        typeDefinition: *setup_options
        required: no
    -   key: X
        name: baudRate
        description: the baud rate requested, in Hz
        typeDefinition:
            '@type': bytes
        required: no
    responseFields:
    -   key: X
        name: baudRate
        description: the baud rate the device is running at, in Hz
        typeDefinition:
            '@type': bytes
        required: yes
    status: [ ]


notifications:
-   name: serialDataAvailable
    notification: 0x0
    description: a serial interface has data available
    condition: on data exceeding some minimum level, or after data received and some timeout passed - not sent until after some kind of read received
    sections:
    -   section: &section_serialDataInfo
            name: serialDataInfo
            description: information on a serial interface with available data
            fields:
            -   key: I
                name: interface
                description: which interface caused the notification
                typeDefinition:
                    '@type': number
                required: yes
            -   key: L
                name: dataLength
                description: the amount of data in the buffer
                typeDefinition:
                    '@type': number
                required: yes

-   name: serialReceiveNearCapacity
    notification: 0x1
    description: a serial interface is almost overflowing its data capacity
    condition: on data exceeding some proportion of the buffer (e.g. 75%) - not sent again until after the fullness drops below this level
    sections:
    -   section: *section_serialDataInfo

-   name: serialReceiveOverflow
    notification: 0x2
    description: a serial interface has overflowed its receive buffer
    condition: on data overflowing the buffer - not sent again until after the fullness drops below some level (e.g. 50%)
    sections:
    -   section:
            name: serialInterface
            description: specifies a serial interface
            fields:
            -   key: I
                name: interface
                description: which interface caused the notification
                typeDefinition:
                    '@type': number
                required: yes

-   name: serialReceiveData
    notification: 0x3
    description: a serial interface has data available, and this notification contains that data
    condition: 'on any of: X bytes of data having arrived, Y milliseconds after the first data in the buffer arrived, or when a serial marker arrives, for reasonable chosen values of X,Y'
    sections:
    -   section: *section_serialDataInfo
    -   section:
            name: serialData
            description: data from a serial system
            fields:
            -   key: M
                name: serialMarker
                description: the type of terminator ending the data
                typeDefinition: *receive_markers
                required: yes
            -   key: D
                name: data
                description: the data in the buffer
                typeDefinition:
                    '@type': bytes
                required: yes
