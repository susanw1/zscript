name: I2c
id: 5
version: 0.0.1
description: I2C Connectivity

commands:
-   name: capabilities
    command: 0x0
    description: I2C capabilities
    operation: get
    requestFields: [ ]
    responseFields:
    -   key: C
        name: commandsSet
        description: which commands are enabled in the I2C module
        typeDefinition:
            '@type': commands
        required: yes
    -   key: I
        name: interfaceCount
        description: how many ports are available
        typeDefinition:
            '@type': number
        required: yes
    -   key: N
        name: notificationsSupported
        description: whether notifications are supported for SMBus alerts or similar
        typeDefinition:
            '@type': flag
        required: no
    -   key: A
        name: addressingSupported
        description: whether addressing via the I2C port is available
        typeDefinition:
            '@type': flag
        required: no
    -   key: F
        name: frequenciesSupported
        description: how many frequencies are supported as a 'menu' of (0 -> slow, 1 -> 100kHz, 2 -> 400kHz, 3 -> 1MHz)
        typeDefinition:
            '@type': number
        required: yes
    -   key: B
        name: bitsetCapabilities
        description: a set of more specific capabilities of the module
        typeDefinition:
            '@type': bitset
            bits:
            -   name: lowSpeedSupported
                description: whether the device supports a frequency in the range 1kHz-10kHz, as a noise resistant mode
            -   name: busFree
                description: whether the device supports freeing from a bus lockup (due to a missed SCL pulse)
            -   name: smBusAddressResolution
                description: whether the device supports resolving I2C addresses associated with alerts
            -   name: tenBit
                description: whether the device supports using ten bit I2C addresses
        required: yes
    status: [ ]

-   name: i2cSetup
    command: 0x1
    description: configures the I2C subsystem
    operation: put
    requestFields:
    -   key: I
        name: interface
        description: 'which I2C interface to configure (default: all)'
        typeDefinition:
            '@type': number
        required: no
    -   key: F
        name: frequency
        description: the frequency to set as a choice from the 'menu'
        typeDefinition:
            '@type': number
        required: no
    -   key: A
        name: addressing
        description: enables addressing
        typeDefinition:
            '@type': flag
        required: no
    -   key: N
        name: notifications
        description: enables notifications
        typeDefinition:
            '@type': flag
        required: no
    -   key: R
        name: resolveSMBus
        description: whether the I2C system should resolve addresses when sending notifications for SMBus alerts
        typeDefinition:
            '@type': flag
        required: no
    responseFields:
    -   key: K
        name: frequencykHz
        description: the frequency the device will run at in kHz
        typeDefinition:
            '@type': number
        required: no
    status:
    -   name: valueOutOfRange
        description: port or frequency out of range

-   name: i2cSend
    command: 0x2
    description: Sends data to a specified I2C device
    operation: post
    requestFields:
    -   key: I
        name: interface
        description: which interface to send to
        typeDefinition:
            '@type': number
        required: yes
    -   key: A
        name: address
        description: which address to send to (0-127, or 0-1023 depending on mode)
        typeDefinition:
            '@type': number
        required: yes
    -   key: T
        name: tenBitMode
        description: 'indicates if 10-bit addressing (default: 7 bit)'
        typeDefinition:
            '@type': flag
        required: no
    -   key: R
        name: retries
        description: 'how many times to try the write operation (default: 5)'
        typeDefinition:
            '@type': number
        required: no
    -   key: D
        name: data
        description: the data to send
        typeDefinition:
            '@type': bytes
        required: yes
    responseFields:
    -   key: I
        name: resultInfo
        description: detailed status info for I2C activity
        typeDefinition: &result_status_bits
            '@type': enum
            values:
            - Ok
            - BufferOverrun
            - AddrNack
            - DataNack
            - Other
        required: yes
    -   key: R
        name: attempts
        description: how many attempts we made to send
        typeDefinition:
            '@type': number
        required: yes
    status:
    -   name: commandFail
        description: write failed in benign way
    -   name: executionError
        description: write failed in bad way - serious error

-   name: i2cReceive
    command: 0x3
    description: Receives data from a specified I2C device
    operation: post
    requestFields:
    -   key: I
        name: interface
        description: which interface to read from
        typeDefinition:
            '@type': number
        required: yes
    -   key: A
        name: address
        description: which address to read from (0-127, or 0-1023 depending on mode)
        typeDefinition:
            '@type': number
        required: yes
    -   key: T
        name: tenBitMode
        description: 'indicates if 10-bit addressing (default: 7 bit)'
        typeDefinition:
            '@type': flag
        required: no
    -   key: R
        name: retries
        description: 'how many times to try the receive operation (default: 5)'
        typeDefinition:
            '@type': number
        required: no
    -   key: L
        name: length
        description: 'number of bytes to attempt to receive (default: 0)'
        typeDefinition:
            '@type': number
        required: no
    responseFields:
    -   key: I
        name: resultInfo
        description: detailed status info for I2C activity
        typeDefinition: *result_status_bits
        required: yes
    -   key: R
        name: attempts
        description: how many attempts were made to receive
        typeDefinition:
            '@type': number
        required: yes
    -   key: D
        name: data
        description: the data that was received
        typeDefinition:
            '@type': bytes
        required: no
    status:
    -   name: dataTooLong
        description: the length requested exceeded the buffer size
    -   name: commandDataNotTransmitted
        description: write failed in benign way
    -   name: peripheralError
        description: write failed in bad way - serious error

-   name: i2cSendReceive
    command: 0x4
    description: Sends a message to a specified I2C device, then performs a receive without an intervening stop bit
    operation: post
    requestFields:
    -   key: I
        name: interface
        description: which interface to send to/read from
        typeDefinition:
            '@type': number
        required: yes
    -   key: A
        name: address
        description: which address to send to/receive from (0-127, or 0-1023 depending on mode)
        typeDefinition:
            '@type': number
        required: yes
    -   key: T
        name: tenBitMode
        description: 'indicates if 10-bit addressing (default: 7 bit)'
        typeDefinition:
            '@type': flag
        required: no
    -   key: R
        name: retries
        description: 'how many times to try the send/receive operation (default: 5)'
        typeDefinition:
            '@type': number
        required: no
    -   key: D
        name: data
        description: the data to send
        typeDefinition:
            '@type': bytes
        required: no
    -   key: L
        name: length
        description: 'number of bytes to attempt to read (default: 0)'
        typeDefinition:
            '@type': number
        required: no
    responseFields:
    -   key: I
        name: resultInfo
        description: detailed status info for I2C activity
        typeDefinition: *result_status_bits
        required: yes
    -   key: R
        name: attempts
        description: how many attempts we made to send/receive
        typeDefinition:
            '@type': number
        required: yes
    -   key: D
        name: data
        description: the data that was read
        typeDefinition:
            '@type': bytes
        required: no
    status:
    -   name: commandDataNotTransmitted
        description: write failed in benign way
    -   name: peripheralError
        description: write failed in bad way - serious error


-   name: channelInfo
    command: 0xc
    description: gets detailed information about an I2C channel
    operation: get
    requestFields:
    -   key: C
        name: channel
        description: 'which channel to fetch info about'
        typeDefinition:
            '@type': number
        required: yes
    responseFields:
    -   key: N
        name: channelCount
        description: the number of I2C channels supported by the device
        typeDefinition:
            '@type': number
        required: yes
    -   key: A
        name: address
        description: which address the channel operates on
        typeDefinition:
            '@type': number
        required: yes
    -   key: I
        name: interface
        description: which interface the channel operates on
        typeDefinition:
            '@type': number
        required: yes
    status: [ ]

-   name: channelSetup
    command: 0xd
    description: sets detailed control variables on an I2C channel
    operation: put
    requestFields:
    -   key: C
        name: channel
        description: which channel to set up
        typeDefinition:
            '@type': number
        required: yes
    -   key: A
        name: address
        description: the address the channel should respond on
        typeDefinition:
            '@type': number
        required: no
    responseFields: [ ]
    status: [ ]



notifications:
-   name: smBusAlert
    notification: 0x0
    description: a notification caused by an SMBus alert line being pulled low
    condition: on an SMBus style alert
    sections:
    -   section:
            name: smBusAlert
            description: information on an SMBus alert line being pulled low
            fields:
            -   key: I
                name: interface
                description: which interface the alert occurred on
                typeDefinition:
                    '@type': number
                required: yes
    -   section:
            name: smBusAlertResolution
            description: information on an attempted SMBus alert address read
            fields:
            -   key: F
                name: failedAddressResolution
                description: SMBus alert resolution was attempted but was not acknowledged
                typeDefinition:
                    '@type': flag
                required: no
            -   key: A
                name: address
                description: the address found through SMBus alert resolution
                typeDefinition:
                    '@type': number
                required: no
