/**
 * STM32F103C8 Blink Demonstration
 *
 * Kevin Cuzner
 */


 
#include "stm32g4xx.h"
#include "stm32g484xx.h"
#include "stm32g4xx_hal.h"
#include "usbd_core.h"


#define REGFIELD(r,m,v) (r)=((r)&~(m))|(v)
#define REGFINDVAL(p,v) (v)<<(p)

int main(void)
{

    //Step 1: Enable the clock to PORT BUSBPD_PORT_COUNT
    //RCC->APB2ENR |= RCC_APB2ENR_IOPBEN;
    RCC->AHB2ENR |= RCC_AHB2ENR_GPIOBEN|RCC_AHB2ENR_GPIOAEN;

 	//RCC->AHB2RSTR |= RCC_AHB2RSTR_GPIOBRST;USBPD_PORT_COUNT

    //Step 2: Change PB0's mode to 0x3 (output) and cfg to 0x0 (push-pull)
    //GPIOB->CRL = GPIO_CRL_MODE0_0 | GPIO_CRL_MODE0_1;

    // MODE-0 [1:0] = 01; OTYPE-0[1:0] = 0; OSPEED-0[1:0] = 01 (med); PUPD = 0
	REGFIELD(GPIOB->MODER, GPIO_MODER_MODE0, GPIO_MODER_MODE0_0);


    GPIOB->OTYPER = 0;
    GPIOB->OSPEEDR = GPIO_OSPEEDR_OSPEED0_0;
 
    GPIOB->BSRR = GPIO_BSRR_BS0;
    while (1)
    {
		uint32_t i;
		for(i = 0x20000; i != 0; i--) {}
        //Step 3: Set PB0 high
        GPIOB->BSRR = GPIO_BSRR_BS0;


		for(i = 0xA0000; i != 0; i--) {}

        //Step 4: Reset PB0 low
        GPIOB->BSRR = GPIO_BSRR_BR0;

    }
    return 0;
}

