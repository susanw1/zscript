
    // Individual Notification Sections, to be grouped into actual notifications. Processed separately from the actual notifications, because many Sections are
    // replicated identically across multiple notifications, and would otherwise create pointless duplicates.

{{#notificationSections}}
    /**
     * Singleton identifier for specific '{{#upperCamel}}{{{sectionName}}}{{/upperCamel}}' notification section: {{description}}
    {{#longDescription}}
     * <p>
     * {{longDescription}}
    {{/longDescription}}
     */
    public static final class {{#upperCamel}}{{{sectionName}}}{{/upperCamel}}NotificationSectionId extends NotificationSectionId<{{#upperCamel}}{{{sectionName}}}{{/upperCamel}}NotificationSectionContent> {
        private static final {{#upperCamel}}{{{sectionName}}}{{/upperCamel}}NotificationSectionId ID = new {{#upperCamel}}{{{sectionName}}}{{/upperCamel}}NotificationSectionId();

        @Nonnull
        public static {{#upperCamel}}{{{sectionName}}}{{/upperCamel}}NotificationSectionId {{#lowerCamel}}{{{sectionName}}}{{/lowerCamel}}NotificationSectionId() {
            return ID;
        }

        @Nonnull
        public static {{#upperCamel}}{{{sectionName}}}{{/upperCamel}}NotificationSectionId get() {
            return ID;
        }

        private {{#upperCamel}}{{{sectionName}}}{{/upperCamel}}NotificationSectionId() {
            // prevent instantiation
        }
    }

    public static final class {{#upperCamel}}{{{sectionName}}}{{/upperCamel}}NotificationSection extends NotificationSection<{{#upperCamel}}{{{sectionName}}}{{/upperCamel}}NotificationSectionContent> {
        @Nonnull
        @Override
        public Class<{{#upperCamel}}{{{sectionName}}}{{/upperCamel}}NotificationSectionContent> getResponseType() {
            return {{#upperCamel}}{{{sectionName}}}{{/upperCamel}}NotificationSectionContent.class;
        }

        /** Constructs the correct notification object, representing the supplied Zscript response expression. */
        @Nonnull
        @Override
        public {{#upperCamel}}{{{sectionName}}}{{/upperCamel}}NotificationSectionContent parseResponse(@Nonnull final ZscriptExpression expression) {
            return new {{#upperCamel}}{{{sectionName}}}{{/upperCamel}}NotificationSectionContent(expression);
        }
    }

    /**
     * Response wrapper for the '{{#upperCamel}}{{{sectionName}}}{{/upperCamel}}' section of the Notification, with accessors for the fields.
     */
    public static final class {{#upperCamel}}{{{sectionName}}}{{/upperCamel}}NotificationSectionContent extends ValidatingResponse {
        /** Constructs the notification object, representing the supplied Zscript response expression. */
        public {{#upperCamel}}{{{sectionName}}}NotificationSectionContent{{/upperCamel}}(@Nonnull ZscriptExpression response) {
            super(response, new byte[] { {{#fields}}{{#required}}(byte) '{{key}}', {{/required}}{{/fields}} });
        }

        // Notification section field accessors
        {{#fields}}
            {{>responseField.mustache}}
        {{/fields}}
    }

{{/notificationSections}}

    // Notification-level classes.

{{#notifications}}
    /**
     * Singleton identifier for the '{{{notificationName}}}' notification: {{description}}
    {{#longDescription}}
     * <p>
     * {{longDescription}}
    {{/longDescription}}
     */
    public static final class {{#upperCamel}}{{{notificationName}}}{{/upperCamel}}NotificationId extends NotificationId<{{#upperCamel}}{{{notificationName}}}{{/upperCamel}}NotificationHandle> {
        public static final {{#upperCamel}}{{{moduleName}}}{{/upperCamel}}Notifications NTFN = {{#upperCamel}}{{{moduleName}}}{{/upperCamel}}Notifications.{{#upperCamel}}{{{notificationName}}}{{/upperCamel}};
        private static final {{#upperCamel}}{{{notificationName}}}{{/upperCamel}}NotificationId ID = new {{#upperCamel}}{{{notificationName}}}{{/upperCamel}}NotificationId();

        private {{#upperCamel}}{{{notificationName}}}{{/upperCamel}}NotificationId() {
            // prevent instantiation
        }

        @Nonnull
        public static {{#upperCamel}}{{{notificationName}}}{{/upperCamel}}NotificationId {{#lowerCamel}}{{{notificationName}}}{{/lowerCamel}}NotificationId() {
            return ID;
        }

        @Nonnull
        public static {{#upperCamel}}{{{notificationName}}}{{/upperCamel}}NotificationId get() {
            return ID;
        }

        @Override
        public int getId() {
            return (MODULE_ID << 4) | (int) NTFN.getNotification();
        }

        @Nonnull
        @Override
        public Class<{{#upperCamel}}{{{notificationName}}}{{/upperCamel}}NotificationHandle> getHandleType() {
            return {{#upperCamel}}{{{notificationName}}}{{/upperCamel}}NotificationHandle.class;
        }

        @Nonnull
        @Override
        public {{#upperCamel}}{{{notificationName}}}{{/upperCamel}}NotificationHandle newHandle() {
            return new {{#upperCamel}}{{{notificationName}}}{{/upperCamel}}NotificationHandle();
        }
    }

    /**
     * Handle for '{{#upperCamel}}{{{notificationName}}}{{/upperCamel}}' notifications, referencing the sections within.
     */
    public static final class {{#upperCamel}}{{{notificationName}}}{{/upperCamel}}NotificationHandle extends NotificationHandle<{{#upperCamel}}{{{notificationName}}}{{/upperCamel}}Notification> {
        private final Map<NotificationSectionId<?>, NotificationSection<?>> sections = new LinkedHashMap<>();

        public {{#upperCamel}}{{{notificationName}}}{{/upperCamel}}NotificationHandle() {
            {{#sections}}
                {{#section}}
            sections.put({{#upperCamel}}{{{sectionName}}}{{/upperCamel}}NotificationSectionId.get(), new {{#upperCamel}}{{{sectionName}}}{{/upperCamel}}NotificationSection());
                {{/section}}
            {{/sections}}
        }

        @Nonnull
        @Override
        public <T extends ZscriptResponse> NotificationSection<T> getSection(@Nonnull NotificationSectionId<T> response) {
            return (NotificationSection<T>) sections.get(response);
        }

        @Nonnull
        @Override
        public List<NotificationSection<?>> getSections() {
            return new ArrayList<>(sections.values());
        }

        @Nonnull
        @Override
        public {{#upperCamel}}{{{notificationName}}}{{/upperCamel}}Notification createNotification(@Nonnull final ResponseExecutionPath responsePath) {
            return new {{#upperCamel}}{{{notificationName}}}{{/upperCamel}}Notification(this, responsePath);
        }
    }

    /**
     * Notification object for the '{{#upperCamel}}{{{notificationName}}}{{/upperCamel}}' notification, with section accessors.
    {{#longDescription}}
     * <p>
     * {{longDescription}}
    {{/longDescription}}
     */
    public static final class {{#upperCamel}}{{{notificationName}}}{{/upperCamel}}Notification implements Notification {
        {{#sections}}
            {{#section}}
        private final {{#upperCamel}}{{{sectionName}}}{{/upperCamel}}NotificationSectionContent {{#lowerCamel}}{{{sectionName}}}{{/lowerCamel}}Section;
            {{/section}}
        {{/sections}}

        {{#upperCamel}}{{{notificationName}}}{{/upperCamel}}Notification(final {{#upperCamel}}{{{notificationName}}}{{/upperCamel}}NotificationHandle handle, final ResponseExecutionPath responsePath) {
            Iterator<ZscriptResponse> responseIterator = handle.buildNotificationContent(responsePath).iterator();

        {{#sections}}
            {{#section}}
            this.{{#lowerCamel}}{{{sectionName}}}{{/lowerCamel}}Section = ({{#upperCamel}}{{{sectionName}}}{{/upperCamel}}NotificationSectionContent) responseIterator.next();
            {{/section}}
        {{/sections}}
        }

        {{#sections}}
            {{#section}}
        /**
         * Accesses the '{{#upperCamel}}{{{sectionName}}}{{/upperCamel}}' section of the notification: {{description}}
        {{#longDescription}}
         * <p>
         * {{longDescription}}
        {{/longDescription}}
         */
        public {{#upperCamel}}{{{sectionName}}}{{/upperCamel}}NotificationSectionContent get{{#upperCamel}}{{{sectionName}}}{{/upperCamel}}Section() {
            return this.{{#lowerCamel}}{{{sectionName}}}{{/lowerCamel}}Section;
        }
            {{/section}}
        {{/sections}}
    }
{{/notifications}}
